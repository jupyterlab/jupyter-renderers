name: CI

on:
  push:
    branches: 'master'
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        extension:
          - fasta
          - geojson
          - katex
          - mathjax2
          - vega3

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Install dependencies
      run: python -m pip install -U "jupyterlab>=4.0.0,<5"

    - name: Lint the extension
      run: |
        set -eux
        jlpm
        jlpm run lint:check

    - name: Build the extension
      working-directory: packages/${{ matrix.extension }}-extension
      run: |
        set -eux
        python -m pip install .[test]

        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "@jupyterlab/${{ matrix.extension }}-extension.*OK"
        python -m jupyterlab.browser_check

    - name: Package the extension
      working-directory: packages/${{ matrix.extension }}-extension
      run: |
        set -eux

        pip install build
        python -m build
        pip uninstall -y "jupyterlab_${{ matrix.extension }}" jupyterlab

    - name: Upload extension packages
      uses: actions/upload-artifact@v3
      with:
        name: extension-artifacts
        path: packages/${{ matrix.extension }}-extension/dist/jupyterlab_${{ matrix.extension }}*
        if-no-files-found: error

  integration-tests:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        extension:
          - fasta
          - geojson
          - katex
          - mathjax2
          - vega3
        jupyterlab:
          - "3.6"
          - 4.0.0
        exclude:
          - extension: katex
            jupyterlab: "3.6"
          - extension: mathjax2
            jupyterlab: "3.6"

    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Download extension package
      uses: actions/download-artifact@v3
      with:
        name: extension-artifacts

    - name: Install the extension
      run: |
        set -eux
        python -m pip install "jupyterlab~=${{ matrix.jupyterlab }}" jupyterlab_${{ matrix.extension }}*.whl

    - name: Install dependencies
      working-directory: packages/${{ matrix.extension }}-extension/ui-tests
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      run: |
        if [[ "${{ matrix.jupyterlab }}" == "3.6" ]]; then
          sed -i s/5.0.0/4.0.0/ package.json
        fi
        jlpm install

    - name: Set up browser cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/pw-browsers
        key: ${{ runner.os }}-${{ hashFiles('**/ui-tests/yarn.lock') }}

    - name: Install browser
      run: jlpm playwright install chromium
      working-directory: packages/${{ matrix.extension }}-extension/ui-tests

    - name: Execute integration tests
      working-directory: packages/${{ matrix.extension }}-extension/ui-tests
      run: |
        jlpm playwright test

    - name: Upload Playwright Test report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: jupyterlab_${{ matrix.extension }}-${{ matrix.jupyterlab }}-playwright-tests
        path: |
          packages/${{ matrix.extension }}-extension/ui-tests/test-results
          packages/${{ matrix.extension }}-extension/ui-tests/playwright-report
